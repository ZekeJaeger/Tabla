/*
Intentare hacer una rama.
 */
package ventana;//Me detectara?

import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

public class Gui extends javax.swing.JFrame {
    DefaultTableModel modelo;
    private int conta=0;
    SegundaTabla segunda = new SegundaTabla();
    /**
     * Creates new form Gui
     */
    int arre[] = {1, 1, 2, 3};
    int arre2[] = {2, 3, 3, 4};
    double arre3[] = {.08, .12, .1, .0};
    double arre4[] = {.4, .5, .4, .3};
    int llenador=0;
    public Gui() {
        initComponents();
        
        jTextFieldNodoD.setDocument (new LimitadorCaracteres());
        jTextFieldNodoO.setDocument (new LimitadorCaracteres());
        
        modelo = new DefaultTableModel();
        tabla.setModel(modelo);
        
        modelo.addColumn("Linea");
        modelo.addColumn("Nodo inicial");
        modelo.addColumn("Nodo final");
        modelo.addColumn("Resistencia");
        modelo.addColumn("Reactancia");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNodoO = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNodoD = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldResistencia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldReactanc = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButtonLlenar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        BotonCalcular = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Formulario"));
        jPanel1.setLayout(new java.awt.GridLayout(9, 0));

        jLabel2.setText("Nodo origen");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel2);
        jPanel1.add(jTextFieldNodoO);

        jLabel3.setText("Nodo destino");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel3);
        jPanel1.add(jTextFieldNodoD);

        jLabel4.setText("Resistencia");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel4);
        jPanel1.add(jTextFieldResistencia);

        jLabel5.setText("Reactancia");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel5);
        jPanel1.add(jTextFieldReactanc);

        jButtonLlenar.setText("Llenar");
        jButtonLlenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLlenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonLlenar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonLlenar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanel2);

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonGuardar);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tabla);

        jButton1.setText("Eliminar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BotonCalcular.setText("Calcular");
        BotonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCalcularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonCalcular))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(BotonCalcular))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int fila = tabla.getSelectedRow();
        if(fila != -1){
            modelo.removeRow(fila);
        }else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar una fila");
        }
        int cuantas = tabla.getRowCount();
        for(int i=0; i<cuantas; i++){
            tabla.setValueAt(i+1, i, 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        int cont_error = 0;
        Pattern expresion = Pattern.compile("^([1-9]{1,1}[0-9]*)$");
        Pattern expresion2 = Pattern.compile("^([-]{0,1}[0-9]{1,1}[0-9]*[.]{0,1}[0-9]*)$");
        
        Matcher extraer_texto = expresion.matcher(jTextFieldNodoO.getText()); 
        if(extraer_texto.find()==true){
              jTextFieldNodoO.setBorder(new LineBorder(new Color(0,190,0), 2));
        }
        else{
            jTextFieldNodoO.setBorder(new LineBorder(Color.RED, 2));
            cont_error++;
        }
        
        extraer_texto = expresion.matcher(jTextFieldNodoD.getText()); 
        if(extraer_texto.find()==true){
              jTextFieldNodoD.setBorder(new LineBorder(new Color(0,190,0), 2));
        }
        else{ 
            jTextFieldNodoD.setBorder(new LineBorder(Color.RED, 2));
            cont_error++;
        }
        
        extraer_texto = expresion2.matcher(jTextFieldReactanc.getText()); 
        if(extraer_texto.find()==true){
              jTextFieldReactanc.setBorder(new LineBorder(new Color(0,190,0), 2));
        }
        else{ 
            jTextFieldReactanc.setBorder(new LineBorder(Color.RED, 2));
            cont_error++;
        }
        
        extraer_texto = expresion2.matcher(jTextFieldResistencia.getText()); 
        if(extraer_texto.find()==true){
              jTextFieldResistencia.setBorder(new LineBorder(new Color(0,190,0), 2));
        }
        else{ 
            jTextFieldResistencia.setBorder(new LineBorder(Color.RED, 2));
            cont_error++;
        }
        
        if(cont_error>0) return;
        
        Object []object = new Object[5];
        conta++;
        object[0] = conta;
        object[1] = jTextFieldNodoO.getText();
        object[2] = jTextFieldNodoD.getText();
        object[3] = jTextFieldResistencia.getText();
        object[4] = jTextFieldReactanc.getText()+"i";
        modelo.addRow(object);
        limpiar();
        
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void BotonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCalcularActionPerformed
        int filas = tabla.getRowCount();
        Object []object = new Object[5];
        for(int i=0; i<filas; i++){
            object[0] = tabla.getValueAt(i,0);
            object[1] = tabla.getValueAt(i,1);
            object[2] = tabla.getValueAt(i,2);
            
            String str = tabla.getValueAt(i,3).toString();
            String str2 = tabla.getValueAt(i,4).toString();
            str2 = str2.substring(0, str2.length() - 1);
            
            double a = Double.valueOf(str).doubleValue();
           
            double b = Double.valueOf(str2).doubleValue();
            
            double a1 = a/(a*a+b*b);
            double b1 = b/(a*a+b*b);
            
            a1=a1*10000;
            a1= Math.round(a1);
            a1=a1/10000;
            b1=b1*10000;
            b1= Math.round(b1);
            b1=b1/10000;
            object[3] = a1;
            object[4] = b1;
            
            //object[3] = tabla.getValueAt(i,3);
            //object[4] = tabla.getValueAt(i,4);
            segunda.getModelo().addRow(object);
        }
        segunda.setVisible(true);
        
    }//GEN-LAST:event_BotonCalcularActionPerformed

    private void jButtonLlenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLlenarActionPerformed
        // TODO add your handling code here:
        
        jTextFieldNodoO.setText(""+arre[llenador]); 
        jTextFieldNodoD.setText(""+arre2[llenador]); 
        jTextFieldResistencia.setText(""+arre3[llenador]); 
        jTextFieldReactanc.setText(""+arre4[llenador]);
        llenador++;
        if(llenador==4) llenador=0;
    }//GEN-LAST:event_jButtonLlenarActionPerformed

    private void limpiar(){
        jTextFieldNodoO.setText(""); 
        jTextFieldNodoD.setText(""); 
        jTextFieldResistencia.setText(""); 
        jTextFieldReactanc.setText(""); 
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCalcular;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonLlenar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldNodoD;
    private javax.swing.JTextField jTextFieldNodoO;
    private javax.swing.JTextField jTextFieldReactanc;
    private javax.swing.JTextField jTextFieldResistencia;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}

class LimitadorCaracteres extends PlainDocument{
    public void insertString(int arg0, String arg1, AttributeSet arg2) throws BadLocationException
    {
        for (int i=0;i<arg1.length();i++)
          // si no es digit, volvemos
            if (!Character.isDigit(arg1.charAt(i)))
                return;

       // Si todos son digit, insertamos el texto en el JTextField
        super.insertString(arg0, arg1, arg2);
    }
}
